
services:
  postgres:
    image: postgres:latest
    container_name: shelter-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: shelterdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d shelterdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  app:
    image: ${API_IMAGE_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shelter-app
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - ${API_PORT}
      - ${API_PORT_DEBUG}
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER_VAL}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD_VAL}
    env_file:
      - .env
    networks:
      - app-network
    volumes:
      - ./:/app
      - ~/.m2:/root/.m2  # Кэш Maven для ускорения сборок
    working_dir: /app
    restart: always
    stdin_open: true
    tty: true

  pgdmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: noemail@noemail.com
      PGADMIN_DEFAULT_PASSWORD: root

    ports:
      - "5050:80"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
     driver: bridge